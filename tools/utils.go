package tools

import (
	"os"
	"path/filepath"
	"runtime"
)

func RootPath() (string, error) {
	path, err := os.Getwd()
	if err != nil {
		return "", err
	}
	return path, nil
}

func RootPathArg() (string, error) {
	execPath := os.Args[0]
	absPath, err := filepath.Abs(execPath)
	if err != nil {
		return "", err
	}
	return absPath, nil
}

func RootPathCaller() (string, error) {
	_, filename, _, _ := runtime.Caller(0)
	root_path, err := filepath.Abs(filename)
	if err != nil {
		return "", err
	}
	return root_path, nil
}

func RootPathOs() (string, error) {
	executePath, err := os.Executable()
	if err != nil {
		return "", err
	}
	root_path, err := filepath.Abs(executePath)
	if err != nil {
		return "", err
	}
	return root_path, nil
}

func BaseDirArgs() string {
	execPath := os.Args[0]
	base_dir := filepath.Dir(execPath)
	return base_dir

}

func BaseDirCaller() string {
	_, filename, _, _ := runtime.Caller(0)
	base_dir := filepath.Dir(filename)
	return base_dir
}

func BaseDirOs() (string, error) {
	executePath, err := os.Executable()
	if err != nil {
		return "", err
	}
	base_dir := filepath.Dir(executePath)
	return base_dir, nil
}
